{"ast":null,"code":"import _classCallCheck from \"/home/sanjay/threejs-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjay/threejs-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanjay/threejs-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanjay/threejs-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/sanjay/threejs-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sanjay/threejs-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanjay/threejs-react-example/src/components/Three.js\";\nimport React from 'react';\nimport * as THREE from 'three';\n\nvar OrbitControls = require(\"three-orbit-controls\")(THREE);\n\nvar Three =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Three, _React$Component);\n\n  /**\n   * Constructor\n   */\n  function Three(props) {\n    var _this;\n\n    _classCallCheck(this, Three);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Three).call(this, props));\n    _this.state = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    _this.initializeOrbits = _this.initializeOrbits.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Rendering\n   */\n\n\n  _createClass(Three, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"three\",\n        ref: function ref(el) {\n          _this2.three = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n    /**\n     * Initialization\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateDimensions();\n      window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.three.appendChild(this.renderer.domElement);\n      this.directionalLight = new THREE.DirectionalLight(0x9090aa);\n      this.directionalLight.position.set(-10, 10, -10).normalize();\n      this.scene.add(this.directionalLight);\n      this.hemisphereLight = new THREE.HemisphereLight(0xffffff, 0x444444);\n      this.hemisphereLight.position.set(1, 1, 1);\n      this.scene.add(this.hemisphereLight);\n      this.initializeOrbits();\n      this.geometry = new THREE.BoxGeometry(1, 1, 1);\n      this.material = new THREE.MeshStandardMaterial({\n        color: 0x00ff00,\n        metalness: 0.15\n      });\n      this.cube = new THREE.Mesh(this.geometry, this.material);\n      this.scene.add(this.cube);\n      this.camera.position.z = 5;\n      this.animate();\n    }\n  }, {\n    key: \"initializeOrbits\",\n    value: function initializeOrbits() {\n      this.controls.rotateSpeed = 1.0;\n      this.controls.zoomSpeed = 1.2;\n      this.controls.panSpeed = 0.8;\n    }\n    /**\n     * Animation loop\n     */\n\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      requestAnimationFrame(this.animate.bind(this)); // this.cube.rotation.x += 0.01;\n      // this.cube.rotation.y += 0.01;\n\n      this.renderer.render(this.scene, this.camera);\n    }\n    /**\n     * Resize operation handler, updating dimensions.\n     * Setting state will invalidate the component \n     * and call `componentWillUpdate()`.\n     */\n\n  }, {\n    key: \"updateDimensions\",\n    value: function updateDimensions() {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n    /**\n     * Invalidation handler, updating layout\n     */\n\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n      this.renderer.setSize(width, height);\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n    }\n    /**\n     * Dispose\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n  }]);\n\n  return Three;\n}(React.Component);\n\nexport { Three as default };","map":{"version":3,"sources":["/home/sanjay/threejs-react-example/src/components/Three.js"],"names":["React","THREE","OrbitControls","require","Three","props","state","width","window","innerWidth","height","innerHeight","initializeOrbits","bind","el","three","updateDimensions","addEventListener","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","controls","domElement","setSize","appendChild","directionalLight","DirectionalLight","position","set","normalize","add","hemisphereLight","HemisphereLight","geometry","BoxGeometry","material","MeshStandardMaterial","color","metalness","cube","Mesh","z","animate","rotateSpeed","zoomSpeed","panSpeed","requestAnimationFrame","render","setState","aspect","updateProjectionMatrix","removeEventListener","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as THREE from 'three';\n\nconst OrbitControls = require(\"three-orbit-controls\")(THREE);\n\nexport default class Three extends React.Component {\n\n  /**\n   * Constructor\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    this.initializeOrbits = this.initializeOrbits.bind(this);\n  }\n\n  /**\n   * Rendering\n   */\n  render() {\n    return (\n      <div className='three' ref={(el) => { this.three = el }}></div>\n    );\n  }\n\n  /**\n   * Initialization\n   */\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.three.appendChild(this.renderer.domElement);\n\n    this.directionalLight = new THREE.DirectionalLight(0x9090aa);\n    this.directionalLight.position.set(-10, 10, -10).normalize();\n    this.scene.add(this.directionalLight);\n\n    this.hemisphereLight = new THREE.HemisphereLight(0xffffff, 0x444444);\n    this.hemisphereLight.position.set(1, 1, 1);\n    this.scene.add(this.hemisphereLight);\n\n    this.initializeOrbits();\n\n    this.geometry = new THREE.BoxGeometry(1, 1, 1);\n    this.material = new THREE.MeshStandardMaterial({ color: 0x00ff00, metalness: 0.15 });\n    this.cube = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.cube);\n\n    this.camera.position.z = 5;\n\n    this.animate();\n  }\n\n    initializeOrbits() {\n        this.controls.rotateSpeed = 1.0;\n        this.controls.zoomSpeed = 1.2;\n        this.controls.panSpeed = 0.8;\n    }\n\n  /**\n   * Animation loop\n   */\n  animate() {\n    requestAnimationFrame(this.animate.bind(this));\n\n    // this.cube.rotation.x += 0.01;\n    // this.cube.rotation.y += 0.01;\n\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  /**\n   * Resize operation handler, updating dimensions.\n   * Setting state will invalidate the component \n   * and call `componentWillUpdate()`.\n   */\n  updateDimensions() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  }\n\n  /**\n   * Invalidation handler, updating layout\n   */\n  componentWillUpdate() {\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Dispose\n   */\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}